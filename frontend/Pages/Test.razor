@page "/test"
@using chesslib
@using frontend.Components

<PageTitle>Controller Test</PageTitle>

<div class="test-container">
    <h1>Controller Test</h1>
    
    <div class="test-info">
        <p><strong>Human vs Computer Test:</strong> White is human-controlled, Black is computer-controlled (RandomController)</p>
        <p><strong>How to play:</strong> Select a white piece and make a move. The computer will automatically respond.</p>
        <div class="button-row">
            <button class="btn btn-primary" @onclick="ResetBoard">Reset Board</button>
            <button class="btn btn-success" @onclick="ToggleAutoPlay">
                @(autoPlayEnabled ? "Stop Auto Play" : "Start Auto Play")
            </button>
        </div>
        @if (isComputerThinking)
        {
            <p><em>Computer is thinking...</em></p>
        }
    </div>
    
    <div class="board-display">
        <frontend.Components.ChessBoard 
            @ref="chessBoardReference"
            UseRandomControllerForBlack="true"
            AutoPlayEnabled="@autoPlayEnabled"
            OnSquareClicked="HandleSquareClicked" />
        
        <div class="move-info">
            <h4>Last Selected Square: @(selectedSquare ?? "None")</h4>
        </div>
    </div>
</div>

<style>
    .test-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 20px;
    }
    .test-info {
        margin-bottom: 20px;
        padding: 15px;
        background-color: #f0f0f0;
        border-radius: 5px;
    }
    .button-row {
        display: flex;
        gap: 10px;
        margin: 15px 0;
    }
    .button-row button {
        padding: 8px 16px;
    }
    .board-display {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .move-info {
        margin-top: 20px;
        padding: 10px;
        background-color: #f8f8f8;
        border-radius: 4px;
        text-align: center;
    }
</style>

@code {
    private string? selectedSquare = null;
    private bool isComputerThinking = false;
    private bool autoPlayEnabled = false;
    private object? chessBoardReference;

    private void HandleSquareClicked(chesslib.Square square)
    {
        selectedSquare = square.AlgebraicPosition;
        isComputerThinking = (square.Piece?.Color == PieceColor.White);
        StateHasChanged();
    }
    
    private void ResetBoard()
    {
        // Re-render the page to create a fresh board and controllers
        selectedSquare = null;
        isComputerThinking = false;
        autoPlayEnabled = false;
        StateHasChanged();
    }
    
    private void ToggleAutoPlay()
    {
        autoPlayEnabled = !autoPlayEnabled;
        StateHasChanged();
    }
}
